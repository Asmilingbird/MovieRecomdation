<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.bysj</groupId>
  <artifactId>MovieRecommendSystem</artifactId>
  <version>1.0-SNAPSHOT</version>
  <modules>
    <module>recommender</module>
    <module>businessServer</module>
      <module>website</module>
      <module>commonmodel</module>
      <module>coremodel</module>
      <module>businessServer2</module>
  </modules>
  <packaging>pom</packaging>

  <name>MovieRecommendSystem</name>

  <!--  声明子项目的公用的配置属性  -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <spark.version>2.1.1</spark.version>
    <scala.version>2.11.8</scala.version>
    <slf4j.version>1.7.22</slf4j.version>
    <log4j.version>1.2.17</log4j.version>
    <quartz.version>2.2.3</quartz.version>
    <hibernate.version>5.2.6.Final</hibernate.version>
    <camel.version>2.18.2</camel.version>
    <freemarker.version>2.3.23</freemarker.version>
    <config.version>1.10</config.version>
    <net.sf.json.version>2.4</net.sf.json.version>
    <activemq.version>5.14.3</activemq.version>
    <hadoop.version>2.7.3</hadoop.version>
  </properties>

  <!-- 声明并引入子项目共有的依赖  -->
  <dependencies>

    <!--  所有子项目的日志框架  -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <!--  具体的日志实现  -->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>${log4j.version}</version>
    </dependency>
  </dependencies>

  <!--  仅声明子项目的依赖，子项目要用时需要声明  -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>${scala.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!--  声明构建信息  -->
  <build>
    <!--  声明并引入子项目共有的插件  -->
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.6.1</version>
        <!--  所有的编译都依照jdk1.8来  -->
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
    </plugins>

    <!--  仅声明子项目的插件，子项目要用时需要声明  -->
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!--  该插件用于将Scala代码编译成class文件  -->
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>3.1.3</version>
          <executions>
            <execution>
              <!--  声明绑定到maven的compile阶段  -->
              <goals>
                <goal>compile</goal>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!--  用于项目的打包  -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <executions>
            <!-- 配置执行器 -->
            <execution>
              <id>make-assembly</id>
              <!-- 绑定到package生命周期阶段上 -->
              <phase>package</phase>
              <goals>
                <!-- 只运行一次 -->
                <goal>single</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
